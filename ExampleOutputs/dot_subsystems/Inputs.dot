digraph{
	 graph [splines=ortho]

	subgraph clusterInputs {
		style = rounded
		bgcolor = grey90
		color = darksalmon
		node [shape = record, color = darksalmon];

		FSInput[label = FSInput, style = filled];
		GpuSInputPoisson[label = GpuSInputPoisson, style = filled];
		GpuSInputRegular[label = GpuSInputRegular, style = filled];
		HostSInputPoisson[label = HostSInputPoisson, style = filled];
		HostSInputRegular[label = HostSInputRegular, style = filled];
		ISInput[label = ISInput, style = filled];
		SInputPoisson[label = SInputPoisson, style = filled];
		SInputRegular[label = SInputRegular, style = filled];
		Inputs[label =< <B> Inputs</B>>, style = bold, fillcolor = white, style = filled];


		//------LAYOUT FOR SUBGRAPH------


		rankdir = BT; // Rank Direction Bottom to Top
		nodesep = 1.5; // Node Separation
		ranksep = 1.5; // Rank Separation


		//INHERITANCE//


		GpuSInputPoisson -> SInputPoisson [arrowhead=empty];

		GpuSInputRegular -> SInputRegular [arrowhead=empty];

		HostSInputPoisson -> SInputPoisson [arrowhead=empty];

		HostSInputRegular -> SInputRegular [arrowhead=empty];

		SInputPoisson -> ISInput [arrowhead=empty];

		SInputRegular -> ISInput [arrowhead=empty];


		//COMPOSITION//


		GpuSInputPoisson -> FSInput [arrowhead=ediamond];
		GpuSInputRegular -> FSInput [arrowhead=ediamond];
		HostSInputPoisson -> FSInput [arrowhead=ediamond];
		HostSInputRegular -> FSInput [arrowhead=ediamond];
		ISInput -> FSInput [arrowhead=ediamond];
	}//end subgraph Inputs
}//end digraph